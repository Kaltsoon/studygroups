var StudyGroupsApp = angular.module('StudyGroupsApp', ['ngRoute', 'angularMoment', 'btford.markdown', 'ui.gravatar']);

StudyGroupsApp.config(function($routeProvider){
  function getUserSignedIn($rootScope, Api){
    return Api.getUserSignedIn()
      .then(function(user){
        $rootScope.userSignedIn = user.data.id ? user.data : null;
      });
  }

  $routeProvider
    .when('/study-groups', {
      templateUrl: '/javascripts/views/study_group_list.html',
      controller: 'StudyGroupListController',
      resolve: { userSignedIn: getUserSignedIn }
    })
    .when('/study-groups/:id/:key', {
      templateUrl: '/javascripts/views/study_group.html',
      controller: 'StudyGroupController',
      resolve: { userSignedIn: getUserSignedIn }
    })
    .when('/study-groups/:id/:key/new-page', {
      templateUrl: '/javascripts/views/new_page.html',
      controller: 'CreatePageController',
      resolve: { userSignedIn: getUserSignedIn }
    })
    .when('/study-groups/:groupId/:key/pages/:pageId', {
      templateUrl: '/javascripts/views/page.html',
      controller: 'PageController',
      resolve: { userSignedIn: getUserSignedIn }
    })
    .otherwise({
      redirectTo: '/study-groups'
    });
});

StudyGroupsApp.run(function($rootScope, Api){
  $rootScope.signOut = function(){
    Api.signOut()
      .then(function(){
        window.location.href = '/welcome';
      })
  }
});

StudyGroupsApp.service('Api', function($http){
  this.getUserSignedIn = function(){
    return $http.get('/users/user-signed-in');
  }

  this.getUsersStudyGroups = function(){
    return $http.get('/study-groups');
  }

  this.getStudyGroup = function(id, key){
    return $http.get('/study-groups/' + id + '/' + key);
  }

  this.createStudyGroup = function(studyGroup){
    return $http.post('/study-groups/create', studyGroup);
  }

  this.removeStudyGroup = function(id){
    return $http.post('/study-groups/' + id + '/remove');
  }

  this.updateStudyGroup = function(group){
    return $http.post('/study-groups/' + group.id + '/update', group);
  }

  this.getPage = function(id){
    return $http.get('/pages/' + id);
  }

  this.removePage = function(id){
    return $http.post('/pages/' + id + '/remove');
  }

  this.updatePage = function(page){
    return $http.post('/pages/' + page.id + '/update', page);
  }

  this.createPage = function(page){
    return $http.post('/pages/create', page);
  }

  this.signOut = function(){
    return $http.post('/users/sign-out');
  }
});

StudyGroupsApp.controller('CreatePageController', function($scope, $location, $routeParams, Api){
  $scope.newPage = {};

  Api.getStudyGroup($routeParams.id, $routeParams.key)
    .then(function(group){
      $scope.group = group.data;
    });

  $scope.createPage = function(){
    $scope.newPage.StudyGroupId = $routeParams.id;

    Api.createPage($scope.newPage)
      .then(function(page){
        $location.path('/study-groups/' + $routeParams.id + '/' + $routeParams.key + '/pages/' + page.data.id);
      });
  }
});

StudyGroupsApp.controller('PageController', function($scope, $location, $routeParams, Api){
  $scope.editedPage = {}

  Api.getPage($routeParams.pageId)
    .then(function(page){
      $scope.page = page.data;
      $scope.editedPage = _.pick($scope.page, 'title', 'content', 'id');
    })
    .catch(function(){
      $location.path('/study-groups');
    });

  $scope.toggleEditing = function(){
    $scope.isEditing = !$scope.isEditing;
  }

  $scope.updatePage = function(){
    Api.updatePage($scope.editedPage)
      .then(function(){
        $scope.isEditing = false;
        _.extend($scope.page, $scope.editedPage);
      });
  }

  $scope.removePage = function(){
    if(confirm('Are you sure you wan\'t to remove this page?')){
      Api.removePage($routeParams.pageId)
        .then(function(){
          $location.path('/study-groups/' + $routeParams.groupId + '/' + $routeParams.key);
        });
    }
  }
});

StudyGroupsApp.controller('StudyGroupController', function($scope, $location, $routeParams, Api){
  $scope.editedGroup = {};

  $scope.shareUrl = $location.absUrl();

  Api.getStudyGroup($routeParams.id, $routeParams.key)
    .then(function(group){
      $scope.group = group.data;
      $scope.editedGroup = _.pick($scope.group, 'name', 'description', 'id');
    })
    .catch(function(){
      $location.path('/study-groups');
    });

  $scope.toggleEditing = function(){
    $scope.isEditing = !$scope.isEditing;
  }

  $scope.updateStudyGroup = function(){
    Api.updateStudyGroup($scope.editedGroup)
      .then(function(){
        $scope.isEditing = false;
        _.extend($scope.group, $scope.editedGroup);
      });
  }

  $scope.removeStudyGroup = function(){
    if(confirm('Are you sure you wan\'t to remove this study group?')){
      Api.removeStudyGroup($routeParams.id)
        .then(function(){
          $location.path('/study-groups');
        });
    }
  }
});

StudyGroupsApp.controller('StudyGroupListController', function($scope, $location, Api){
  Api.getUsersStudyGroups()
    .then(function(groups){
      $scope.groups = groups.data;
    });

  $scope.newStudyGroup = {};

  $scope.toggleStudyGroupForm = function(){
    $scope.studyGroupFormIsShowing = !$scope.studyGroupFormIsShowing;
  }

  $scope.createStudyGroup = function(){
    Api.createStudyGroup($scope.newStudyGroup)
      .then(function(group){
        $location.path('/study-groups/' + group.data.id + '/' + group.data.key);
      });
  }
});

StudyGroupsApp.directive('tooltip', function(){
  return {
    scope: {
      content: '='
    },
    restrict: 'A',
    link: function(scope, element, attrs){
      $(element).tooltip({ container: 'body', title: scope.content });
    }
  };
});
